#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 6.2.1 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 32 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 88 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 92 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 150 0 150 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 175 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 24 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 19 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 44 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 46 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 21 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 0 1 #"\0"
0 75 1 #"\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 17 #"DejaVu Sans Mono\0"
0.0 13 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 102 102 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 249 148 40 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 51 174 51 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 60 194 57 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 151 69 43 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 50 163 255 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 192 203
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 166 0 255 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 50 205 50 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 240 230 140
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 205 92 92 0
0 0 -1 -1 0 1 #"\0"
0 75 17 #"DejaVu Sans Mono\0"
0.0 6 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255 255
255 1 -1 2 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 100 0 0 0
0 -1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1           0 2756 0 4 3 85
(
 #";; The first three lines of this file were inserted by DrRacket. The"
 #"y record metadata"
) 0 0 4 29 1 #"\n"
0 0 4 3 85
(
 #";; about the language level of this file in a form that our tools ca"
 #"n easily process."
) 0 0 4 29 1 #"\n"
0 0 4 3 183
(
 #"#reader(lib \"htdp-beginner-reader.ss\" \"lang\")((modname screensav"
 #"er-2) (read-case-sensitive #t) (teachpacks ()) (htdp-settings #(#t c"
 #"onstructor repeating-decimal #f #t none #f () #f)))"
) 0 0 4 29 1 #"\n"
0 0 17 3 15 #";; screensaver."
0 0 24 29 1 #"\n"
0 0 17 3 72
(
 #";; two rectangles that move around the canvas with respective veloci"
 #"ties"
) 0 0 24 29 1 #"\n"
0 0 17 3 17 #";; in the canvas."
0 0 24 29 1 #"\n"
0 0 17 3 64
#";; space bar pauses and unpauses the movement of the rectangles."
0 0 24 29 1 #"\n"
0 0 17 3 64
#";; the rectangles can be selected and smothly dragged around the"
0 0 24 29 1 #"\n"
0 0 17 3 75
(
 #";; canvas;if selected the rectangleare paused and the color changes "
 #"to red."
) 0 0 24 29 1 #"\n"
0 0 17 3 34 #";; a red circle acts as a pointer."
0 0 24 29 1 #"\n"
0 0 17 3 33 #";; start with (screensaver speed)"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";; start with a screensaver and a speed"
0 0 24 29 1 #"\n"
0 0 17 3 22 #";; (screensaver speed)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 8 #"rackunit"
0 0 24 3 11 #")          "
0 0 17 3 20 #";;testing framework."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 19 3 12 #"\"extras.rkt\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 14 #"2htdp/universe"
0 0 24 3 5 #")    "
0 0 17 3 50 #";;module to use various inbuilt library functions."
0 0 24 29 1 #"\n"
0 0 17 3 31 #";;such as big-bang,key-events?."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 11 #"2htdp/image"
0 0 24 3 8 #")       "
0 0 17 3 39 #";;module with inbuilt library functions"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";;like building shapes and structures."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 70
(
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
 #";;"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 7 #"provide"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 14 3 13 #"initial-world"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 14 3 16 #"world-after-tick"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 14 3 21 #"world-after-key-event"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 14 3 11 #"world-rect1"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 14 3 11 #"world-rect2"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 14 3 13 #"world-paused?"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 14 3 13 #"new-rectangle"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 14 3 6 #"rect-x"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 14 3 6 #"rect-y"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 14 3 7 #"rect-vx"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 14 3 7 #"rect-vy"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";;CONSTANTS:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 16 #"HALF-WORLD-WIDTH"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 17 #"HALF-WORLD-HEIGHT"
0 0 24 3 1 #" "
0 0 21 3 3 #"150"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"TEXT-FONT"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"LEFT-BOUNDARY"
0 0 24 3 1 #" "
0 0 21 3 2 #"32"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 14 #"RIGHT-BOUNDARY"
0 0 24 3 1 #" "
0 0 21 3 3 #"368"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 15 #"BOTTOM-BOUNDARY"
0 0 24 3 1 #" "
0 0 21 3 3 #"273"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"TOP-BOUNDARY"
0 0 24 3 1 #" "
0 0 21 3 2 #"27"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"VEL-X"
0 0 24 3 1 #" "
0 0 21 3 3 #"-12"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"VEL-Y"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"VEL-X1"
0 0 24 3 1 #" "
0 0 21 3 2 #"23"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"VEL-Y1"
0 0 24 3 1 #" "
0 0 21 3 3 #"-14"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"RECT-HEIGHT"
0 0 24 3 1 #" "
0 0 21 3 2 #"60"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"RECT-WIDTH"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 16 #"HALF-RECT-HEIGHT"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 15 #"HALF-RECT-WIDTH"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";; initial-world :Any->WorldState."
0 0 24 29 1 #"\n"
0 0 17 3 19 #";; GIVEN: any value"
0 0 24 29 1 #"\n"
0 0 17 3 59
#";; RETURNS: the initial world specified in the problem set."
0 0 24 29 1 #"\n"
0 0 17 3 69
(
 #";;          here we start as the rectangles in the positions(200,100"
 #")"
) 0 0 24 29 1 #"\n"
0 0 17 3 49 #";;          and (200,200) both in a paused state."
0 0 24 29 1 #"\n"
0 0 17 3 69
(
 #";;          true boolean in initial-world function signifies that th"
 #"e"
) 0 0 24 29 1 #"\n"
0 0 17 3 32 #";;          rectangle is paused."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"initial-world"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 14 3 16 #"HALF-WORLD-WIDTH"
0 0 24 3 1 #" "
0 0 14 3 17 #"HALF-WORLD-HEIGHT"
0 0 24 3 1 #" "
0 0 14 3 11 #"initial-pos"
0 0 24 3 1 #" "
0 0 14 3 12 #"initial-pos1"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";;Example:"
0 0 24 29 1 #"\n"
0 0 17 3 68
#";;(make-world 200 150 (make-rect (make-posn 200 100) -12 20 #false))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 7 #";;Tests"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 14 #"begin-for-test"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 13 #"initial-world"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 3 #"150"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-rect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 2 #") "
0 0 21 3 3 #"-12"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 9 #"make-rect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 2 #") "
0 0 21 3 2 #"23"
0 0 24 3 1 #" "
0 0 21 3 3 #"-14"
0 0 24 3 1 #" "
0 0 21 3 6 #"#false"
0 0 24 3 2 #") "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 19 3 54 #"\"Test result should yeild a mworld with initial state\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";;dimensions of the canvas."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 73
(
 #";;we determine the dimensions of the canvas(height and width) which "
 #"shall"
) 0 0 24 29 1 #"\n"
0 0 17 3 42 #";;act as the boundary for our screensaver."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";; dimensions should comprise of:"
0 0 24 29 1 #"\n"
0 0 17 3 17 #";;;;Canvas Height"
0 0 24 29 1 #"\n"
0 0 17 3 16 #";;;;Canvas Width"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";;;;Interp:Self Evident."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"CANVAS-WIDTH"
0 0 24 3 1 #" "
0 0 21 3 3 #"400"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"CANVAS-HEIGHT"
0 0 24 3 1 #" "
0 0 21 3 3 #"300"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"EMPTY-CANVAS"
0 0 24 3 2 #" ("
0 0 14 3 11 #"empty-scene"
0 0 24 3 1 #" "
0 0 14 3 12 #"CANVAS-WIDTH"
0 0 24 3 1 #" "
0 0 14 3 13 #"CANVAS-HEIGHT"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";; rect-x : Rectangle -> NonNegInt"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";; rect-y : Rectangle -> NonNegInt"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";; rect-vx : Rectangle -> Int"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";; rect-vy : Rectangle -> Int"
0 0 24 29 1 #"\n"
0 0 17 3 66
#";; RETURNS: the coordinates of the center of the rectangle and its"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";; velocity in the x- and y- directions."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";;Given: co-ordinates of rectangle1"
0 0 24 29 1 #"\n"
0 0 17 3 45 #";;Returns:initial position of the rectangles."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"rect-x"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";;Given: co-ordinates of rectangle2"
0 0 24 29 1 #"\n"
0 0 17 3 45 #";;Returns:initial position of the rectangles."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"rect-y"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 42 #";;Given:  The velocities of the rectangles"
0 0 24 29 1 #"\n"
0 0 17 3 62
#";;Returns:The initial position and velocity of the rectangles."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 4 #"rect"
0 0 24 3 2 #" ("
0 0 14 3 3 #"pos"
0 0 24 3 1 #" "
0 0 14 3 2 #"vx"
0 0 24 3 1 #" "
0 0 14 3 2 #"vy"
0 0 24 3 1 #" "
0 0 14 3 9 #"selected?"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"initial-pos"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-rect"
0 0 24 3 1 #" "
0 0 14 3 6 #"rect-x"
0 0 24 3 1 #" "
0 0 14 3 5 #"VEL-X"
0 0 24 3 1 #" "
0 0 14 3 5 #"VEL-Y"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"initial-pos1"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-rect"
0 0 24 3 1 #" "
0 0 14 3 6 #"rect-y"
0 0 24 3 1 #" "
0 0 14 3 6 #"VEL-X1"
0 0 24 3 1 #" "
0 0 14 3 6 #"VEL-Y1"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";; SCREENSAVER FUNCTION."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";; screensaver : PosReal -> WorldState"
0 0 24 29 1 #"\n"
0 0 17 3 54 #";; GIVEN: the speed of the simulation, in seconds/tick"
0 0 24 29 1 #"\n"
0 0 17 3 66
#";; EFFECT: runs the simulation, starting with the initial state as"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";;         specified in the problem set."
0 0 24 29 1 #"\n"
0 0 17 3 40 #";; RETURNS: the final state of the world"
0 0 24 29 1 #"\n"
0 0 17 3 69
(
 #";; \"speed\" used with screensaver function is used to assign the sp"
 #"eed"
) 0 0 24 29 1 #"\n"
0 0 17 3 39 #";; to the simulation in seconds/tick.  "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 23 #";; BIG BANG EXPRESSION."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";; (big-bang (state-expr clause ...)"
0 0 24 29 1 #"\n"
0 0 17 3 56 #";; a big-bang expression returns the last world when the"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";; stop condition is satisfied."
0 0 24 29 1 #"\n"
0 0 17 3 48 #";; big-bang is responsible to run the animation."
0 0 24 29 1 #"\n"
0 0 17 3 77
(
 #";; on-draw calls world to scene when we need to draw the scene on th"
 #"e screen."
) 0 0 24 29 1 #"\n"
0 0 17 3 65
#";; on-key responses to the keyevent whenever the keyevent occurs."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"screensaver"
0 0 24 3 1 #" "
0 0 14 3 5 #"speed"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 8 #"big-bang"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 14 3 16 #"HALF-WORLD-WIDTH"
0 0 24 3 1 #" "
0 0 14 3 17 #"HALF-WORLD-HEIGHT"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                        "
0 0 14 3 11 #"initial-pos"
0 0 24 3 1 #" "
0 0 14 3 12 #"initial-pos1"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 7 #"on-tick"
0 0 24 3 1 #" "
0 0 14 3 16 #"world-after-tick"
0 0 24 3 1 #" "
0 0 14 3 5 #"speed"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 6 #"on-key"
0 0 24 3 2 #"  "
0 0 14 3 21 #"world-after-key-event"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 8 #"on-mouse"
0 0 24 3 2 #"  "
0 0 14 3 23 #"world-after-mouse-event"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 7 #"on-draw"
0 0 24 3 1 #" "
0 0 14 3 14 #"world-to-scene"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 49 #";;A world is a (make-world PosInt PosInt Boolean)"
0 0 24 29 1 #"\n"
0 0 17 3 74
(
 #";;Interp:rect1 is the first rectangle with its coordinates and veloc"
 #"ities."
) 0 0 24 29 1 #"\n"
0 0 17 3 75
(
 #";;Interp:rect2 is the second rectangle with its coordinates and velo"
 #"cities."
) 0 0 24 29 1 #"\n"
0 0 17 3 79
(
 #";;       paused? is the condition that shall return a boolean result"
 #" of whether"
) 0 0 24 29 1 #"\n"
0 0 17 3 43 #";;       a rectangles are moving or paused."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";;Template:"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";;world-fn:World->??."
0 0 24 29 1 #"\n"
0 0 17 3 22 #";;(define (world-fn n)"
0 0 24 29 1 #"\n"
0 0 17 3 5 #";;(.."
0 0 24 29 1 #"\n"
0 0 17 3 30 #";;   (...is-pause-keyevent...)"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";; world-fn : World -> ??"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";(define (world-fn n)"
0 0 24 29 1 #"\n"
0 0 17 3 57 #";  (... (world-rect1 n)(world-rect2 n)(world-paused? n)))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 2 #" ("
0 0 14 3 2 #"mx"
0 0 24 3 1 #" "
0 0 14 3 2 #"my"
0 0 24 3 1 #" "
0 0 14 3 5 #"rect1"
0 0 24 3 1 #" "
0 0 14 3 5 #"rect2"
0 0 24 3 1 #" "
0 0 14 3 7 #"paused?"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";;example of world for tests:"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 23 #"unpaused-world-at-20-20"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"drag\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"drag\""
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 21 #"paused-world-at-20-20"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"drag\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"drag\""
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 21 #"paused-world-at-30-30"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"button-up\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"drag\""
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 23 #"unpaused-world-at-30-30"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"button-up\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"drag\""
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 3 #")) "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 30 #";;;;key-event : KeyEvent -> ??"
0 0 24 29 1 #"\n"
0 0 17 3 23 #";;(define (key-event k)"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";; helper function for key event"
0 0 24 29 1 #"\n"
0 0 17 3 44 #";; is-pause-key-event? : KeyEvent -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 41 #";; GIVEN: a KeyEvent i.e. spacebar (\" \")."
0 0 24 29 1 #"\n"
0 0 17 3 65
#";; RETURNS: true iff the KeyEvent represents a pause instruction."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #"("
0 0 14 3 19 #"is-pause-key-event?"
0 0 24 3 1 #" "
0 0 14 3 2 #"ke"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 5 #"key=?"
0 0 24 3 1 #" "
0 0 14 3 2 #"ke"
0 0 24 3 1 #" "
0 0 19 3 3 #"\" \""
0 0 24 3 3 #")) "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 15 #"pause-key-event"
0 0 24 3 1 #" "
0 0 19 3 3 #"\" \""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 19 #"non-pause-key-event"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"q\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";;Tests:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 14 #"begin-for-test"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 19 #"is-pause-key-event?"
0 0 24 3 1 #" "
0 0 19 3 3 #"\" \""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 4 #"true"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 19 3 47 #"\"should return a boolean value for a key event\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 23 #";; examples for testing"
0 0 24 29 1 #"\n"
0 0 17 3 30 #";;(define pause-key-event \" \")"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";;(define non-pause-key-event \"p\")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 23 #";;END DATA DEFINITIONS."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 72
(
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
 #";;;;"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 59
#";; new-rectangle : NonNegInt NonNegInt Int Int -> Rectangle"
0 0 24 29 1 #"\n"
0 0 17 3 67
#";; GIVEN: 2 non-negative integers x and y, and 2 integers vx and vy"
0 0 24 29 1 #"\n"
0 0 17 3 65
#";; RETURNS: a rectangle centered at (x,y), which will travel with"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";; velocity (vx, vy)."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"new-rectangle"
0 0 24 3 1 #" "
0 0 14 3 2 #"mx"
0 0 24 3 1 #" "
0 0 14 3 2 #"my"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 14 #"rect-selected?"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 18 #"draw-selected-rect"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 2 #"mx"
0 0 24 3 1 #" "
0 0 14 3 2 #"my"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 16 #"draw-normal-rect"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";;tests:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 14 #"begin-for-test"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 13 #"new-rectangle"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"drag\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"drag\""
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-rect"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"outline\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                 "
0 0 21 3 3 #"-12"
0 0 24 3 1 #" "
0 0 21 3 2 #"24"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 3 #") )"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 12           4 66 1182
(
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(st"
 #"ruct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-poi"
 #"nt 0 0 60 0 0 0) #(struct:pulled-point 0 0 60 50 0 0) #(struct:pulle"
 #"d-point 0 0 0 50 0 0)) outline \"blue\"))) #(struct:translate 15.0 1"
 #"8.5 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struc"
 #"t:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:ove"
 #"rlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 "
 #"#(struct:translate 1.5 6.5 #(struct:text \"-\" 0 1 \"blue\" 10 #f sw"
 #"iss normal normal #f))) #(struct:translate 3.0 0.0 #(struct:translat"
 #"e 3.0 6.5 #(struct:text \"1\" 0 1 \"blue\" 10 #f swiss normal normal"
 #" #f))))) #(struct:translate 9.0 0.0 #(struct:translate 3.0 6.5 #(str"
 #"uct:text \"2\" 0 1 \"blue\" 10 #f swiss normal normal #f))))) #(stru"
 #"ct:translate 15.0 0.0 #(struct:translate 1.5 6.5 #(struct:text \",\""
 #" 0 1 \"blue\" 10 #f swiss normal normal #f))))) #(struct:translate 1"
 #"8.0 0.0 #(struct:translate 3.0 6.5 #(struct:text \"2\" 0 1 \"blue\" "
 #"10 #f swiss normal normal #f))))) #(struct:translate 24.0 0.0 #(stru"
 #"ct:translate 3.0 6.5 #(struct:text \"4\" 0 1 \"blue\" 10 #f swiss no"
 #"rmal normal #f)))))) #(struct:bb 60.0 50.0 50.0) #f)"
) 0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 19 3 45 #"\"a rectangle is returned in unselected state\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 13 #"new-rectangle"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"drag\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"drag\""
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-rect"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"outline\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                 "
0 0 21 3 3 #"-12"
0 0 24 3 1 #" "
0 0 21 3 2 #"24"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 3 #") )"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 12           4 66 1175
(
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(st"
 #"ruct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-poi"
 #"nt 0 0 60 0 0 0) #(struct:pulled-point 0 0 60 50 0 0) #(struct:pulle"
 #"d-point 0 0 0 50 0 0)) outline \"red\"))) #(struct:translate 15.0 18"
 #".5 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct"
 #":translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:over"
 #"lay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #"
 #"(struct:translate 1.5 6.5 #(struct:text \"-\" 0 1 \"red\" 10 #f swis"
 #"s normal normal #f))) #(struct:translate 3.0 0.0 #(struct:translate "
 #"3.0 6.5 #(struct:text \"1\" 0 1 \"red\" 10 #f swiss normal normal #f"
 #"))))) #(struct:translate 9.0 0.0 #(struct:translate 3.0 6.5 #(struct"
 #":text \"2\" 0 1 \"red\" 10 #f swiss normal normal #f))))) #(struct:t"
 #"ranslate 15.0 0.0 #(struct:translate 1.5 6.5 #(struct:text \",\" 0 1"
 #" \"red\" 10 #f swiss normal normal #f))))) #(struct:translate 18.0 0"
 #".0 #(struct:translate 3.0 6.5 #(struct:text \"2\" 0 1 \"red\" 10 #f "
 #"swiss normal normal #f))))) #(struct:translate 24.0 0.0 #(struct:tra"
 #"nslate 3.0 6.5 #(struct:text \"4\" 0 1 \"red\" 10 #f swiss normal no"
 #"rmal #f)))))) #(struct:bb 60.0 50.0 50.0) #f)"
) 0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 19 3 43 #"\"a rectangle is returned in selected state\""
0 0 24 3 3 #") )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 44 #";; world-to-scene : WorldState -> WorldState"
0 0 24 29 1 #"\n"
0 0 17 3 79
(
 #";; RETURNS: a Scene that portrays the given world of rectangles andc"
 #"oordinates."
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 47 #";; EXAMPLE: (world-to-scene (make-world 20 ??))"
0 0 24 29 1 #"\n"
0 0 17 3 64
#";;          = (place-image new-rectangle rect-X 20 EMPTY-CANVAS)"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";; STRATEGY: Use template for World on w"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #"("
0 0 14 3 14 #"world-to-scene"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 18 #"any-rect-selected?"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 11 #"place-image"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 6 #"circle"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"outline\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 8 #"world-mx"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 3 #") ("
0 0 14 3 8 #"world-my"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 11 #"make-canvas"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 11 #"make-canvas"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 70
(
 #";; world-after-mouse-event : World Integer Integer MouseEvent -> Wor"
 #"ld"
) 0 0 24 29 1 #"\n"
0 0 17 3 67
#";; GIVEN: a world, the x- and y-positions of the mouse, and a mouse"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";; event. "
0 0 24 29 1 #"\n"
0 0 17 3 62
#";; RETURNS: the world that should follow the given mouse event"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";; STRATEGY: Cases on MouseEvent"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 23 #"world-after-mouse-event"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #" "
0 0 14 3 2 #"mx"
0 0 24 3 1 #" "
0 0 14 3 2 #"my"
0 0 24 3 1 #" "
0 0 14 3 3 #"mev"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 7 #"mouse=?"
0 0 24 3 1 #" "
0 0 14 3 3 #"mev"
0 0 24 3 1 #" "
0 0 19 3 13 #"\"button-down\""
0 0 24 3 3 #") ("
0 0 14 3 23 #"world-after-button-down"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #" "
0 0 14 3 2 #"mx"
0 0 24 3 1 #" "
0 0 14 3 2 #"my"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 7 #"mouse=?"
0 0 24 3 1 #" "
0 0 14 3 3 #"mev"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"drag\""
0 0 24 3 3 #") ("
0 0 14 3 16 #"world-after-drag"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #" "
0 0 14 3 2 #"mx"
0 0 24 3 1 #" "
0 0 14 3 2 #"my"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 7 #"mouse=?"
0 0 24 3 1 #" "
0 0 14 3 3 #"mev"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"button-up\""
0 0 24 3 2 #")("
0 0 14 3 21 #"world-after-button-up"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #" "
0 0 14 3 2 #"mx"
0 0 24 3 1 #" "
0 0 14 3 2 #"my"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 59
#";; world-after-button-down : World Integer Integer -> World"
0 0 24 29 1 #"\n"
0 0 17 3 53 #";; GIVEN: a world and the location of the button-down"
0 0 24 29 1 #"\n"
0 0 17 3 68
#";; RETURNS: the world following a button-down at the given location."
0 0 24 29 1 #"\n"
0 0 17 3 79
(
 #";; if the button-down is inside the rectangle,returns a rectangle ju"
 #"st like the"
) 0 0 24 29 1 #"\n"
0 0 17 3 41 #";; given one, except that it is selected."
0 0 24 29 1 #"\n"
0 0 17 3 53 #";; STRATEGY: Use template for World on w             "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 23 #"world-after-button-down"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #" "
0 0 14 3 2 #"mx"
0 0 24 3 1 #" "
0 0 14 3 2 #"my"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"make-world"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 2 #"mx"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 2 #"my"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 22 #"rect-after-button-down"
0 0 24 3 2 #" ("
0 0 14 3 11 #"world-rect1"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #") "
0 0 14 3 2 #"mx"
0 0 24 3 1 #" "
0 0 14 3 2 #"my"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 22 #"rect-after-button-down"
0 0 24 3 2 #" ("
0 0 14 3 11 #"world-rect2"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #") "
0 0 14 3 2 #"mx"
0 0 24 3 1 #" "
0 0 14 3 2 #"my"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 13 #"world-paused?"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 58
#";; rect-after-button-down : World Integer Integer -> World"
0 0 24 29 1 #"\n"
0 0 17 3 70
(
 #";; GIVEN: a rectangle in the world and the location of the button-do"
 #"wn"
) 0 0 24 29 1 #"\n"
0 0 17 3 68
#";; RETURNS: the world following a button-down at the given location."
0 0 24 29 1 #"\n"
0 0 17 3 74
(
 #";; if the button-down is inside the rectangle, returns a cat just li"
 #"ke the"
) 0 0 24 29 1 #"\n"
0 0 17 3 41 #";; given one, except that it is selected."
0 0 24 29 1 #"\n"
0 0 17 3 41 #";; STRATEGY: Use template for World on w "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 22 #"rect-after-button-down"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 2 #"mx"
0 0 24 3 1 #" "
0 0 14 3 2 #"my"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 8 #"in-rect?"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 2 #"mx"
0 0 24 3 1 #" "
0 0 14 3 2 #"my"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 9 #"make-rect"
0 0 24 3 2 #" ("
0 0 14 3 8 #"rect-pos"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 7 #"rect-vx"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 7 #"rect-vy"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 2 #") "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 14 3 1 #"r"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 44 #";; in-rect? : World Integer Integer -> World"
0 0 24 29 1 #"\n"
0 0 17 3 71
(
 #";; RETURNS: true iff the given coordinate is inside the bounding box"
 #" of"
) 0 0 24 29 1 #"\n"
0 0 17 3 17 #";; the rectangle."
0 0 24 29 1 #"\n"
0 0 17 3 28 #";; EXAMPLES: see tests below"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";; strategy: use template for World on w"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"in-rect?"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"and"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 2 #"<="
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 16 #"HALF-RECT-HEIGHT"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 6 #"posn-x"
0 0 24 3 2 #" ("
0 0 14 3 8 #"rect-pos"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 16 #"HALF-RECT-HEIGHT"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 2 #"<="
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 15 #"HALF-RECT-WIDTH"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 6 #"posn-y"
0 0 24 3 2 #" ("
0 0 14 3 8 #"rect-pos"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 15 #"HALF-RECT-WIDTH"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 52 #";; world-after-drag : World Integer Integer -> World"
0 0 24 29 1 #"\n"
0 0 17 3 52 #";; GIVEN: a world and the location of the drag event"
0 0 24 29 1 #"\n"
0 0 17 3 61
#";; RETURNS: the world following a drag at the given location."
0 0 24 29 1 #"\n"
0 0 17 3 68
#";; if the world is selected, then return a world just like the given"
0 0 24 29 1 #"\n"
0 0 17 3 61
#";; one, except that it is now centered on the mouse position."
0 0 24 29 1 #"\n"
0 0 17 3 40 #";; STRATEGY: Use template for World on w"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"world-after-drag"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #" "
0 0 14 3 2 #"mx"
0 0 24 3 1 #" "
0 0 14 3 2 #"my"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 14 3 2 #"mx"
0 0 24 3 1 #" "
0 0 14 3 2 #"my"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 15 #"rect-after-drag"
0 0 24 3 2 #" ("
0 0 14 3 11 #"world-rect1"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 8 #"world-mx"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 8 #"world-my"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #") "
0 0 14 3 2 #"mx"
0 0 24 3 1 #" "
0 0 14 3 2 #"my"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 15 #"rect-after-drag"
0 0 24 3 2 #" ("
0 0 14 3 11 #"world-rect2"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 8 #"world-mx"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 8 #"world-my"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #") "
0 0 14 3 2 #"mx"
0 0 24 3 1 #" "
0 0 14 3 2 #"my"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 13 #"world-paused?"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 51 #";; rect-after-drag : World Integer Integer -> World"
0 0 24 29 1 #"\n"
0 0 17 3 56 #";; GIVEN: a rectangle and the location of the drag event"
0 0 24 29 1 #"\n"
0 0 17 3 61
#";; RETURNS: the world following a drag at the given location."
0 0 24 29 1 #"\n"
0 0 17 3 72
(
 #";; if the world is selected, then return a rectangle just like the g"
 #"iven"
) 0 0 24 29 1 #"\n"
0 0 17 3 61
#";; one, except that it is now centered on the mouse position."
0 0 24 29 1 #"\n"
0 0 17 3 40 #";; STRATEGY: Use template for World on w"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"rect-after-drag"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 3 #"wmx"
0 0 24 3 1 #" "
0 0 14 3 3 #"wmy"
0 0 24 3 1 #" "
0 0 14 3 2 #"mx"
0 0 24 3 1 #" "
0 0 14 3 2 #"my"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 14 #"rect-selected?"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 9 #"make-rect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 2 #" ("
0 0 14 3 8 #"rect-pos"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 2 #"mx"
0 0 24 3 1 #" "
0 0 14 3 3 #"wmx"
0 0 24 3 3 #")) "
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 24 3 2 #" ("
0 0 14 3 8 #"rect-pos"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 2 #"my"
0 0 24 3 1 #" "
0 0 14 3 3 #"wmy"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 7 #"rect-vx"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 7 #"rect-vy"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 2 #") "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 14 3 1 #"r"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 57 #";; world-after-button-up : World Integer Integer -> World"
0 0 24 29 1 #"\n"
0 0 17 3 66
#";; RETURNS: the world following a button-up at the given location."
0 0 24 29 1 #"\n"
0 0 17 3 76
(
 #";; if the rectangle is selected, return a rectangle just like the gi"
 #"ven one,"
) 0 0 24 29 1 #"\n"
0 0 17 3 40 #";; except that it is no longer selected."
0 0 24 29 1 #"\n"
0 0 17 3 40 #";; STRATEGY: use template for World on w"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 21 #"world-after-button-up"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #" "
0 0 14 3 2 #"mx"
0 0 24 3 1 #" "
0 0 14 3 2 #"my"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"make-world"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 2 #"mx"
0 0 24 3 1 #" "
0 0 14 3 2 #"my"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 20 #"rect-after-button-up"
0 0 24 3 2 #" ("
0 0 14 3 11 #"world-rect1"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 20 #"rect-after-button-up"
0 0 24 3 2 #" ("
0 0 14 3 11 #"world-rect2"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 13 #"world-paused?"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 56 #";; rect-after-button-up : World Integer Integer -> World"
0 0 24 29 1 #"\n"
0 0 17 3 66
#";; RETURNS: the world following a button-up at the given location."
0 0 24 29 1 #"\n"
0 0 17 3 76
(
 #";; if the rectangle is selected, return a rectangle just like the gi"
 #"ven one,"
) 0 0 24 29 1 #"\n"
0 0 17 3 40 #";; except that it is no longer selected."
0 0 24 29 1 #"\n"
0 0 17 3 40 #";; STRATEGY: use template for World on w"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 20 #"rect-after-button-up"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 14 #"rect-selected?"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 9 #"make-rect"
0 0 24 3 2 #" ("
0 0 14 3 8 #"rect-pos"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 7 #"rect-vx"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 7 #"rect-vy"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                 "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 14 3 1 #"r"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 7 #";;Tests"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 14 #"begin-for-test"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 20 #"rect-after-button-up"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-rect"
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                     ("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"outline\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                     "
0 0 21 3 3 #"-12"
0 0 24 3 1 #" "
0 0 21 3 2 #"24"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"make-rect"
0 0 24 3 1 #" "
0 12           4 66 229
(
 #"(#(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 "
 #"0 0 0 0) #(struct:pulled-point 0 0 20 0 0 0) #(struct:pulled-point 0"
 #" 0 20 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) outline \"blue\")"
 #") #(struct:bb 20 20 20) #f)"
) 0 0 24 3 1 #" "
0 0 21 3 3 #"-12"
0 0 24 3 1 #" "
0 0 21 3 2 #"24"
0 0 24 3 1 #" "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 19 3 44 #"\"returns a rectangle in button up condition\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 20 #"rect-after-button-up"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-rect"
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                     ("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"outline\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                     "
0 0 21 3 3 #"-12"
0 0 24 3 1 #" "
0 0 21 3 2 #"24"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"make-rect"
0 0 24 3 1 #" "
0 12           4 66 229
(
 #"(#(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 "
 #"0 0 0 0) #(struct:pulled-point 0 0 20 0 0 0) #(struct:pulled-point 0"
 #" 0 20 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) outline \"blue\")"
 #") #(struct:bb 20 20 20) #f)"
) 0 0 24 3 1 #" "
0 0 21 3 3 #"-12"
0 0 24 3 1 #" "
0 0 21 3 2 #"24"
0 0 24 3 1 #" "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 19 3 44 #"\"returns a rectangle in button up condition\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";;any-rect-selected: World ->World"
0 0 24 29 1 #"\n"
0 0 17 3 30 #";;Given: a rectangle position."
0 0 24 29 1 #"\n"
0 0 17 3 68
#";;Returns:Whether a rectangle is selected or not in the given world."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #"("
0 0 14 3 18 #"any-rect-selected?"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 14 #"rect-selected?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"world-rect1"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 4 #")) ("
0 0 14 3 14 #"rect-selected?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"world-rect2"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";;make-canvas :World->World"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";;Given: canvas and its coordinates."
0 0 24 29 1 #"\n"
0 0 17 3 41 #";;Returns: A canvas with the world scene."
0 0 24 29 1 #"\n"
0 0 17 3 35 #";;Strategy: Functional Composition."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-canvas"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"place-image"
0 0 24 3 2 #" ("
0 0 14 3 13 #"new-rectangle"
0 0 24 3 2 #" ("
0 0 14 3 8 #"world-mx"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 3 #") ("
0 0 14 3 8 #"world-my"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 3 #") ("
0 0 14 3 11 #"world-rect1"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 6 #"posn-x"
0 0 24 3 2 #" ("
0 0 14 3 8 #"rect-pos"
0 0 24 3 2 #" ("
0 0 14 3 11 #"world-rect1"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 6 #"posn-y"
0 0 24 3 2 #" ("
0 0 14 3 8 #"rect-pos"
0 0 24 3 2 #" ("
0 0 14 3 11 #"world-rect1"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 11 #"place-image"
0 0 24 3 2 #" ("
0 0 14 3 13 #"new-rectangle"
0 0 24 3 2 #" ("
0 0 14 3 8 #"world-mx"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                           ("
0 0 14 3 8 #"world-my"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 4 #")  ("
0 0 14 3 11 #"world-rect2"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 6 #"posn-x"
0 0 24 3 2 #" ("
0 0 14 3 8 #"rect-pos"
0 0 24 3 2 #" ("
0 0 14 3 11 #"world-rect2"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 6 #"posn-y"
0 0 24 3 2 #" ("
0 0 14 3 8 #"rect-pos"
0 0 24 3 2 #" ("
0 0 14 3 11 #"world-rect2"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                            "
0 0 14 3 12 #"EMPTY-CANVAS"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 61
#";;draw-elected-rect: NonNegInt NonNegInt Int Int -> Rectangle"
0 0 24 29 1 #"\n"
0 0 17 3 64
#";;Given: The coordinates dimensions and otline of the rectangle."
0 0 24 29 1 #"\n"
0 0 17 3 55 #";;Returns: the rectanglefeature when in selected state."
0 0 24 29 1 #"\n"
0 0 17 3 36 #";;Strategy: functional composition ."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 18 #"draw-selected-rect"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 2 #"mx"
0 0 24 3 1 #" "
0 0 14 3 2 #"my"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 7 #"overlay"
0 0 24 3 2 #" ("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 14 3 11 #"RECT-HEIGHT"
0 0 24 3 1 #" "
0 0 14 3 10 #"RECT-WIDTH"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"outline\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 4 #"text"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-append"
0 0 24 3 2 #" ("
0 0 14 3 14 #"number->string"
0 0 24 3 2 #" ("
0 0 14 3 7 #"rect-vx"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                          "
0 0 19 3 3 #"\",\""
0 0 24 3 2 #" ("
0 0 14 3 14 #"number->string"
0 0 24 3 2 #" ("
0 0 14 3 7 #"rect-vy"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 4 #"))) "
0 0 14 3 9 #"TEXT-FONT"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";;Tests:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 14 #"begin-for-test"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 18 #"draw-selected-rect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-rect"
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                     ("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"outline\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                     "
0 0 21 3 3 #"-12"
0 0 24 3 1 #" "
0 0 21 3 2 #"24"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 2 #") "
0 0 19 3 6 #"\"drag\""
0 0 24 3 1 #" "
0 0 19 3 11 #"\"button-up\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 12           4 66 1175
(
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(st"
 #"ruct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-poi"
 #"nt 0 0 60 0 0 0) #(struct:pulled-point 0 0 60 50 0 0) #(struct:pulle"
 #"d-point 0 0 0 50 0 0)) outline \"red\"))) #(struct:translate 15.0 18"
 #".5 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct"
 #":translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:over"
 #"lay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #"
 #"(struct:translate 1.5 6.5 #(struct:text \"-\" 0 1 \"red\" 10 #f swis"
 #"s normal normal #f))) #(struct:translate 3.0 0.0 #(struct:translate "
 #"3.0 6.5 #(struct:text \"1\" 0 1 \"red\" 10 #f swiss normal normal #f"
 #"))))) #(struct:translate 9.0 0.0 #(struct:translate 3.0 6.5 #(struct"
 #":text \"2\" 0 1 \"red\" 10 #f swiss normal normal #f))))) #(struct:t"
 #"ranslate 15.0 0.0 #(struct:translate 1.5 6.5 #(struct:text \",\" 0 1"
 #" \"red\" 10 #f swiss normal normal #f))))) #(struct:translate 18.0 0"
 #".0 #(struct:translate 3.0 6.5 #(struct:text \"2\" 0 1 \"red\" 10 #f "
 #"swiss normal normal #f))))) #(struct:translate 24.0 0.0 #(struct:tra"
 #"nslate 3.0 6.5 #(struct:text \"4\" 0 1 \"red\" 10 #f swiss normal no"
 #"rmal #f)))))) #(struct:bb 60.0 50.0 50.0) #f)"
) 0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 19 3 60
#"\"Should return an image of rectangle when in selected state\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 61
#";;draw-elected-rect: NonNegInt NonNegInt Int Int -> Rectangle"
0 0 24 29 1 #"\n"
0 0 17 3 64
#";;Given: The coordinates dimensions and otline of the rectangle."
0 0 24 29 1 #"\n"
0 0 17 3 58
#";;Returns: the rectangle feature when in unselected state."
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"draw-normal-rect"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 7 #"overlay"
0 0 24 3 2 #" ("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 14 3 11 #"RECT-HEIGHT"
0 0 24 3 1 #" "
0 0 14 3 10 #"RECT-WIDTH"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"outline\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 4 #"text"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-append"
0 0 24 3 2 #" ("
0 0 14 3 14 #"number->string"
0 0 24 3 2 #" ("
0 0 14 3 7 #"rect-vx"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                          "
0 0 19 3 3 #"\",\""
0 0 24 3 2 #" ("
0 0 14 3 14 #"number->string"
0 0 24 3 2 #" ("
0 0 14 3 7 #"rect-vy"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 4 #"))) "
0 0 14 3 9 #"TEXT-FONT"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";;Tests:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 14 #"begin-for-test"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 16 #"draw-normal-rect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-rect"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"outline\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                  "
0 0 21 3 3 #"-12"
0 0 24 3 1 #" "
0 0 21 3 2 #"24"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 12           4 66 1182
(
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(st"
 #"ruct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-poi"
 #"nt 0 0 60 0 0 0) #(struct:pulled-point 0 0 60 50 0 0) #(struct:pulle"
 #"d-point 0 0 0 50 0 0)) outline \"blue\"))) #(struct:translate 15.0 1"
 #"8.5 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struc"
 #"t:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:ove"
 #"rlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 "
 #"#(struct:translate 1.5 6.5 #(struct:text \"-\" 0 1 \"blue\" 10 #f sw"
 #"iss normal normal #f))) #(struct:translate 3.0 0.0 #(struct:translat"
 #"e 3.0 6.5 #(struct:text \"1\" 0 1 \"blue\" 10 #f swiss normal normal"
 #" #f))))) #(struct:translate 9.0 0.0 #(struct:translate 3.0 6.5 #(str"
 #"uct:text \"2\" 0 1 \"blue\" 10 #f swiss normal normal #f))))) #(stru"
 #"ct:translate 15.0 0.0 #(struct:translate 1.5 6.5 #(struct:text \",\""
 #" 0 1 \"blue\" 10 #f swiss normal normal #f))))) #(struct:translate 1"
 #"8.0 0.0 #(struct:translate 3.0 6.5 #(struct:text \"2\" 0 1 \"blue\" "
 #"10 #f swiss normal normal #f))))) #(struct:translate 24.0 0.0 #(stru"
 #"ct:translate 3.0 6.5 #(struct:text \"4\" 0 1 \"blue\" 10 #f swiss no"
 #"rmal normal #f)))))) #(struct:bb 60.0 50.0 50.0) #f)"
) 0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 19 3 62
#"\"Should return an image of rectangle when in unselected state\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 66
#";; RETURNS: the WorldState that should follow the given worldstate"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";; after the given keyevent"
0 0 24 29 1 #"\n"
0 0 17 3 54 #";; STRATEGY: Cases on whether the kev is a pause event"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";;Strategy: functional composition ."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 21 #"world-after-key-event"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 3 #"kev"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 19 #"is-pause-key-event?"
0 0 24 3 1 #" "
0 0 14 3 3 #"kev"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 25 #"world-with-paused-toggled"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 14 3 1 #"a"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 45 #";; world-with-paused-toggled : World -> World"
0 0 24 29 1 #"\n"
0 0 17 3 69
(
 #";; RETURNS: a world just like the given one, but with paused? toggle"
 #"d"
) 0 0 24 29 1 #"\n"
0 0 17 3 41 #";; STRATEGY: Use template for World on w."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 25 #"world-with-paused-toggled"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"make-world"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 8 #"world-mx"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 8 #"world-my"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 11 #"world-rect1"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 11 #"world-rect2"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-paused?"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 46 #";; world-after-tick : WorldState -> WorldState"
0 0 24 29 1 #"\n"
0 0 17 3 19 #";; Given :A world w"
0 0 24 29 1 #"\n"
0 0 17 3 68
#";; RETURNS: the world state that should follow the given world state"
0 0 24 29 1 #"\n"
0 0 17 3 16 #";; after a tick."
0 0 24 29 1 #"\n"
0 0 17 3 40 #";; STRATEGY: Use template for World on w"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"world-after-tick"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-paused?"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 14 3 1 #"w"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 10 #"make-world"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 8 #"world-mx"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 8 #"world-my"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 9 #"move-rect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"world-rect1"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #")) ("
0 0 14 3 9 #"move-rect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"world-rect2"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #")) "
0 0 14 3 5 #"false"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";;move-rect: WorldState-> WorldState."
0 0 24 29 1 #"\n"
0 0 17 3 40 #";;Given: The current state of the world."
0 0 24 29 1 #"\n"
0 0 17 3 62
#";;Returns:The world state and moves the rectangle as specified"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";;in the problem set."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"move-rect"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 14 #"rect-selected?"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 14 3 1 #"r"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 9 #"make-rect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 8 #"update-x"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 2 #" ("
0 0 14 3 8 #"rect-pos"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 4 #")) ("
0 0 14 3 7 #"rect-vx"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 8 #"update-y"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 24 3 2 #" ("
0 0 14 3 8 #"rect-pos"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 4 #")) ("
0 0 14 3 7 #"rect-vy"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 9 #"update-xv"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 2 #" ("
0 0 14 3 8 #"rect-pos"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 4 #")) ("
0 0 14 3 7 #"rect-vx"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 9 #"update-yv"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 24 3 2 #" ("
0 0 14 3 8 #"rect-pos"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 4 #")) ("
0 0 14 3 7 #"rect-vy"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 14 #"rect-selected?"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";;update-x : WorldState->WorldSate."
0 0 24 29 1 #"\n"
0 0 17 3 44 #";;Given: The boundary co-ordinate condition."
0 0 24 29 1 #"\n"
0 0 17 3 65
#";;Returns: The updated condition of the left or right boundaries."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"update-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 2 #"vx"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 20 #"left-right-boundary?"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 2 #"vx"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 2 #"vx"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 14 3 13 #"LEFT-BOUNDARY"
0 0 24 3 1 #" "
0 0 14 3 14 #"RIGHT-BOUNDARY"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 2 #"vx"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";;Tests:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 14 #"begin-for-test"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 8 #"update-x"
0 0 24 3 1 #" "
0 0 21 3 3 #"-20"
0 0 24 3 1 #" "
0 0 21 3 3 #"388"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 3 #"368"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 19 3 42 #"\"Returns an updated value of the velocity\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 8 #"update-x"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 3 #"360"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 3 #"368"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 19 3 42 #"\"Returns an updated value of the velocity\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 8 #"update-x"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 3 #"-27"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 2 #"32"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 19 3 42 #"\"Returns an updated value of the velocity\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";;update-y : WorldState->WorldSate."
0 0 24 29 1 #"\n"
0 0 17 3 44 #";;Given: The boundary co-ordinate condition."
0 0 24 29 1 #"\n"
0 0 17 3 63
#";;Returns: The updated condition of the -top-bottom boundaries."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"update-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 2 #"vy"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 17 #"top-bot-boundary?"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 2 #"vy"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 2 #"vy"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 14 3 12 #"TOP-BOUNDARY"
0 0 24 3 1 #" "
0 0 14 3 15 #"BOTTOM-BOUNDARY"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 2 #"vy"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";;Tests:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 14 #"begin-for-test"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 8 #"update-y"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 3 #"270"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 3 #"273"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 19 3 42 #"\"Returns an updated value of the velocity\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 8 #"update-y"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 2 #"27"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 2 #"47"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 19 3 42 #"\"Returns an updated value of the velocity\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 8 #"update-y"
0 0 24 3 1 #" "
0 0 21 3 3 #"-20"
0 0 24 3 1 #" "
0 0 21 3 3 #"-25"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 2 #"27"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 19 3 42 #"\"Returns an updated value of the velocity\""
0 0 24 3 3 #" ))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";;update-xv : WorldState->WorldSate."
0 0 24 29 1 #"\n"
0 0 17 3 44 #";;Given: The boundary co-ordinate condition."
0 0 24 29 1 #"\n"
0 0 17 3 50 #";;Returns: The updated condition of thex velocity."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"update-xv"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 2 #"vx"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 20 #"left-right-boundary?"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 2 #"vx"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 2 #"vx"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 14 3 2 #"vx"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";;Tests:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 14 #"begin-for-test"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"update-xv"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 2 #"25"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 19 3 42 #"\"Returns an updated value of the velocity\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"update-xv"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 3 #"-25"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 2 #"25"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 19 3 42 #"\"Returns an updated value of the velocity\""
0 0 24 3 3 #" ))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";;update-yv : WorldState->WorldSate."
0 0 24 29 1 #"\n"
0 0 17 3 44 #";;Given: The boundary co-ordinate condition."
0 0 24 29 1 #"\n"
0 0 17 3 51 #";;Returns: The updated condition of the y velocity."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"update-yv"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 2 #"vy"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 17 #"top-bot-boundary?"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 2 #"vy"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 2 #"vy"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 14 3 2 #"vy"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";;Tests:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 14 #"begin-for-test"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"update-yv"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 2 #"25"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 19 3 42 #"\"Returns an updated value of the velocity\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"update-yv"
0 0 24 3 1 #" "
0 0 21 3 3 #"-20"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 3 #"-25"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 19 3 42 #"\"Returns an updated value of the velocity\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";; top-bot-boundary? WorldState->Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 44 #";;Given: The boundary co-ordinate condition."
0 0 24 29 1 #"\n"
0 0 17 3 66
#";;Returns: The updated condition of the top and bottom boundaries."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 17 #"top-bot-boundary?"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 2 #"vy"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 2 #"vy"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 2 #") "
0 0 14 3 15 #"BOTTOM-BOUNDARY"
0 0 24 3 3 #") ("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 2 #"vy"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 2 #") "
0 0 14 3 12 #"TOP-BOUNDARY"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 14 #"begin-for-test"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 17 #"top-bot-boundary?"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 3 #"233"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 5 #"false"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 19 3 54 #"\"Should return a boolean value for the boundary cases\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 43 #";; left-right-boundary? WorldState->Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 44 #";;Given: The boundary co-ordinate condition."
0 0 24 29 1 #"\n"
0 0 17 3 66
#";;Returns: The updated condition of the left and right boundaries."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 20 #"left-right-boundary?"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 2 #"vx"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 2 #"vx"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 14 3 14 #"RIGHT-BOUNDARY"
0 0 24 3 3 #") ("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 2 #"vx"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 14 3 13 #"LEFT-BOUNDARY"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 14 #"begin-for-test"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 20 #"left-right-boundary?"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 3 #"233"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 5 #"false"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 19 3 54 #"\"Should return a boolean value for the boundary cases\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0           0
